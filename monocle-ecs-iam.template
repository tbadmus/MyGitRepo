AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  AppShortName:
    Type: String

  AccountName:
    Type: String

  CodeDeployManagedPolicyArn:
    Type: String
    Description: CodeDeploy Managed Policy ARN

  CredentialsManagedPolicyArn:
    Type: String
    Description: Credentials Managed Policy ARN

Resources:
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
            - elasticloadbalancing:DeregisterTargets
            - elasticloadbalancing:Describe*
            - elasticloadbalancing:RegisterInstancesWithLoadBalancer
            - elasticloadbalancing:RegisterTargets
            - ec2:Describe*
            - ec2:AuthorizeSecurityGroupIngress
            Resource: '*'

  AutoscalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [application-autoscaling.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
      - PolicyName: service-autoscaling
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - application-autoscaling:*
            - cloudwatch:DescribeAlarms
            - cloudwatch:PutMetricAlarm
            - ecs:DescribeServices
            - ecs:UpdateService
            Resource: '*'

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ec2.amazonaws.com]
          Action: ['sts:AssumeRole']
      ManagedPolicyArns:
      - !Ref 'CodeDeployManagedPolicyArn'
      - !Ref 'CredentialsManagedPolicyArn'
      Path: /
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: 'ecs:*'
            Resource:
            - !Sub arn:aws:ecs:*:*:cluster/${AppShortName}-*
            - !Sub arn:aws:ecs:*:*:container-instance/${AppShortName}-*
          - Effect: Allow
            Action: 'logs:*'
            Resource: !Sub arn:aws:logs:*:*:${AppShortName}-*
          - Effect: Allow
            Action:
            - ecr:GetAuthorizationToken
            - ecr:BatchCheckLayerAvailability
            - ecr:GetDownloadUrlForLayer
            - ecr:BatchGetImage
            Resource: '*'
          - Effect: Allow
            Action:
            - ecs:DiscoverPollEndpoint
            - ecs:Poll
            - ecs:StartTelemetrySession
            - ecs:Submit*
            Resource: '*'
          - Effect: Allow
            Action:
            - s3:List*
            - s3:Get*
            Resource: !Sub arn:aws:s3:::infor-${AccountName}-appdata-${AWS::Region}/${AppShortName}/*
          - Effect: Allow
            Action:
            - autoscaling:Describe*
            Resource: '*'
          - Effect: Allow
            Action:
            - cloudwatch:ListMetrics
            - cloudwatch:GetMetricStatistics
            - cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
            - sns:Publish
            Resource:
            - !Sub arn:aws:sns:*:${AWS::AccountId}:${AppShortName}-*
          - Effect: Allow
            Action:
            - ec2:DescribeInstances
            Resource: '*'
          - Effect: Allow
            Action:
            - s3:ListBucket
            - s3:GetBucketLocation
            - s3:ListBucketMultipartUploads
            - s3:ListBucketVersions
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:AbortMultipartUpload
            - s3:ListMultipartUploadParts
            Resource: !Sub arn:aws:s3:::infor-${AccountName}-monocle*


  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref 'EC2Role']

Outputs:
  EC2InstanceProfile:
    Value: !Ref 'EC2InstanceProfile'
  ECSServiceRole:
    Value: !Ref 'ECSServiceRole'
  ECSServiceRoleArn:
    Value: !GetAtt ECSServiceRole.Arn
  Ec2RoleArn:
    Value: !GetAtt EC2Role.Arn
  EC2Role:
    Value: !Ref 'EC2Role'
  AutoscalingRole:
    Value: !Ref 'AutoscalingRole'
  AutoscalingRoleARN:
    Value: !GetAtt AutoscalingRole.Arn
